{"version":3,"sources":["constants/RecommendationConstants.ts","components/LoadingSkeleton/LoadingSkeleton.tsx","hooks/useAppSelector.ts","hooks/useAppDispatch.ts","slices/RecommendationsSlice.ts","slices/ErrorsSlice.ts","slices/UserSlice.ts","constants/ApiConstants.ts","utils/localStorage.ts","interfaces/Question.ts","constants/QuestionsData.ts","slices/StepperSlice.ts","components/Recommendations/Recommendations.tsx","components/Stepper/Stepper.tsx","components/FormQuestion/FormQuestion.tsx","components/LoadingSpinner/LoadingSpinner.tsx","components/Form/Form.tsx","utils/common.ts","components/ErrorsAlert/ErrorsAlert.tsx","App.tsx","store.ts","reportWebVitals.ts","index.tsx"],"names":["InsuranceTypes","Periodicity","LoadingSkeleton","width","height","className","styles","classNames","elementStyles","style","memo","useAppSelector","useSelector","useAppDispatch","useDispatch","initialRecommendations","recommendationsSlice","createSlice","name","initialState","reducers","SetRecommendations","state","action","payload","ResetRecommendations","recommendationsReducer","reducer","actions","errorsSlice","SetErrors","errorReducer","initialUserState","jwt","userSlice","SetUser","ResetUser","userReducer","API_BASE_URL","API_POST_USER","API_GET_RECOMMENDATION","setLocalStorage","serializedState","JSON","stringify","localStorage","setItem","err","getLoclStorage","getItem","parse","AnswerMode","AnswerType","childrenOptionalQuestion","id","title","answer","mode","SingleLineInput","type","Number","placeholder","questions","Text","SingleChoiceInput","options","group","label","value","total","length","currentStep","isFirst","isLast","stepperSlice","AddQuestion","question","index","splice","RemoveQuestion","filter","questionId","SetCurrentStep","stepperReducer","Recommendations","dispatch","useState","loading","setLoading","recommendations","userJwt","user","useEffect","requestHeaders","Authorization","axios","get","headers","then","response","data","saveRecommendations","catch","error","errors","toJSON","message","reset","removeItem","Boolean","map","recommendation","price","amount","periodicity","onClick","Stepper","children","stepper","nextStep","prevStep","disabled","FormQuestion","onChange","onQuestionChange","event","aria-label","aria-required","option","checked","htmlFor","_renderAnswerInput","LoadingSpinner","size","dimensions","initialFormState","firstName","address","childrenExist","occupation","email","Form","previouslySavedForm","formValues","formState","setFormState","addUserRequestLoading","setAddUserRequestLoading","target","isChildrenExist","string","isChildrenCountExist","find","numberOfChildren","newFormState","formSteps","includes","undefined","isFormValid","post","ErrorsAlert","errorsList","Object","entries","errorListElements","scope","toString","role","App","savedRecommendations","savedUser","store","configureStore","devTools","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e1639cc.chunk.js","sourcesContent":["export enum InsuranceTypes {\n    PRIVATE_LIABILITY = 'Private liability',\n    HOME_CONTENT = 'Home content',\n    HEALTH_INSURANCE = 'Health insurance'\n}\n\nexport enum Periodicity {\n    MONTH = 'month',\n    YEAR = 'year'\n}","import { CSSProperties, FunctionComponent, memo } from 'react';\nimport './LoadingSkeleton.scss';\n\ninterface LoadingSkeletonProps {\n    width?: string;\n    height?: string;\n    className?: string;\n    styles?: CSSProperties;\n}\ntype Props = LoadingSkeletonProps;\n\nconst LoadingSkeleton: FunctionComponent<Props> = ({ width, height, className, styles }) => {\n    const classNames = className ? `loading-skeleton ${className}` : 'loading-skeleton';\n    const elementStyles = {\n        ...styles,\n        ...(width && { width }),\n        ...(height && { height }),\n    }\n    return <div className={classNames} style={elementStyles}/>;\n};\n\nexport default memo(LoadingSkeleton);\n","import { TypedUseSelectorHook, useSelector } from 'react-redux'\nimport { RootState } from '../store'\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IRecommendation } from '../interfaces/Recommendation';\n\n\nexport const initialRecommendations: Array<IRecommendation> = [];\n\nconst recommendationsSlice = createSlice({\n    name: 'Recommendations',\n    initialState: initialRecommendations,\n    reducers: {\n        SetRecommendations(state: Array<IRecommendation>, action: PayloadAction<Array<IRecommendation>>) {\n            return action.payload\n        },\n        ResetRecommendations(state: Array<IRecommendation>) {\n            return initialRecommendations\n        }\n    }\n});\n\nexport const recommendationsReducer = recommendationsSlice.reducer;\nexport const { SetRecommendations, ResetRecommendations } = recommendationsSlice.actions;\nexport default recommendationsSlice;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IError } from '../interfaces/Error';\n\nexport const initialErrors: Array<IError> = [];\n\nconst errorsSlice = createSlice({\n    name: 'Error',\n    initialState: initialErrors,\n    reducers: {\n        SetErrors(state: Array<IError> | null, action: PayloadAction<Array<IError>>) {\n            return action.payload;\n        }\n    }\n});\n\nexport const errorReducer = errorsSlice.reducer;\nexport const { SetErrors } = errorsSlice.actions;\nexport default errorsSlice;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { IUser } from '../interfaces/User';\n\n\nexport const initialUserState: IUser = {\n    jwt: \"\"\n}\n\nconst userSlice = createSlice({\n    name: 'User',\n    initialState: initialUserState,\n    reducers: {\n        SetUser(state: IUser, action: PayloadAction<IUser>) {\n            return {\n                jwt: action.payload.jwt\n            }\n        },\n        ResetUser() {\n            return initialUserState\n        }\n    }\n});\n\nexport const userReducer = userSlice.reducer;\nexport const { SetUser, ResetUser } = userSlice.actions;\nexport default userSlice;","export const API_BASE_URL = 'https://challenge-dot-popsure-204813.appspot.com';\nexport const API_POST_USER = `${API_BASE_URL}/user`;\nexport const API_GET_RECOMMENDATION = `${API_BASE_URL}/recommendation`;","import { IForm } from '../interfaces/Form';\nimport { IUser } from '../interfaces/User';\nimport { IRecommendation } from '../interfaces/Recommendation';\n\nexport function setLocalStorage<T>(name: string, payload: T): void {\n  try {\n    const serializedState = JSON.stringify(payload);\n    localStorage.setItem(name, serializedState);\n  } catch (err) {\n    // log errors with something like sentry.io\n  }\n}\n\nexport function getLoclStorage<T>(name: string): T | undefined {\n  try {\n    const serializedState = localStorage.getItem(name);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState) as T;\n  } catch (err) {\n    return undefined;\n  }\n}\n\n\nexport const loadForm = (): IForm | undefined => getLoclStorage('@mou/formAnswers');\nexport const saveForm = (formAnswers: IForm): void => setLocalStorage('@mou/formAnswers', formAnswers);\nexport const loadUser = (): IUser | undefined => getLoclStorage('@mou/user');\nexport const saveUser = (user: IUser): void => setLocalStorage('@mou/user', user);\nexport const removeUser = (): void => localStorage.removeItem('@mou/user');\nexport const loadRecommendations = (): Array<IRecommendation> | undefined => getLoclStorage('@mou/recommendations');\nexport const saveRecommendations = (recommendations: Array<IRecommendation>): void => setLocalStorage('@mou/recommendations', recommendations);\nexport const removeRecommendations = (): void => localStorage.removeItem('@mou/recommendations');","export enum AnswerMode {\n  SingleLineInput = \"single-line-input\",\n  SingleChoiceInput = \"single-choice-input\",\n}\n\nexport enum AnswerType {\n  Text = \"text\",\n  Number = \"number\",\n}\n\nexport type IAnswer<T> = T extends AnswerMode.SingleLineInput\n  ? { mode: AnswerMode.SingleLineInput; type: AnswerType; placeholder?: string; }\n  : { mode: AnswerMode.SingleChoiceInput; options: Array<ISingleChoiceAnswer> };\n\n  export interface ISingleChoiceAnswer {\n    readonly group: string;\n    readonly label: string;\n    readonly value: string;\n  }\n\nexport type IQuestion = {\n  readonly id: string;\n  readonly title: string;\n  readonly answer:\n    | IAnswer<AnswerMode.SingleLineInput>\n    | IAnswer<AnswerMode.SingleChoiceInput>;\n  readonly value?: string | number | undefined;\n  optional?: boolean;\n  onChange: (id: string, event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type IQuestionProps = Omit<IQuestion, 'onChange'>;\n","import { AnswerMode, AnswerType, IQuestionProps } from \"../interfaces/Question\";\n\nexport const childrenOptionalQuestion: IQuestionProps = {\n  id: \"numberOfChildren\",\n  title: \"How many childreen do you have?\",\n  answer: { mode: AnswerMode.SingleLineInput, type: AnswerType.Number, placeholder: 'Number of Childreen' },\n}\n\nexport const questions: Array<IQuestionProps> = [\n  {\n    id: \"firstName\",\n    title: \"What's your first name?\",\n    answer: { mode: AnswerMode.SingleLineInput, type: AnswerType.Text, placeholder: 'Your first name' },\n  },\n  {\n    id: \"address\",\n    title: \"What's your address\",\n    answer: { mode: AnswerMode.SingleLineInput, type: AnswerType.Text, placeholder: 'Your home address' },\n  },\n  {\n    id: \"childrenExist\",\n    title: \"Do you have children?\",\n    answer: {\n      mode: AnswerMode.SingleChoiceInput,\n      options: [\n        { group: \"childrenExist\", label: \"Yes\", value: \"true\" },\n        { group: \"childrenExist\", label: \"No\", value: \"false\" },\n      ],\n    },\n  },\n  {\n    id: \"occupation\",\n    title: \"What's your occupation?\",\n    answer: {\n      mode: AnswerMode.SingleChoiceInput,\n      options: [\n        { group: \"occupation\", label: \"Employed\", value: \"EMPLOYED\" },\n        { group: \"occupation\", label: \"Self-Employed\", value: \"SELF_EMPLOYED\" },\n        { group: \"occupation\", label: \"Student\", value: \"STUDENT\" },\n      ],\n    },\n  },\n  {\n    id: \"email\",\n    title: \"What's your email?\",\n    answer: { mode: AnswerMode.SingleLineInput, type: AnswerType.Text, placeholder: 'Your email address' },\n  },\n];","\nimport { IQuestionProps } from '../interfaces/Question';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { questions } from '../constants/QuestionsData';\n\ninterface SetCurrentStepPayload {\n    currentStep: number,\n}\n\ninterface AddQuestionPayload {\n    index: number,\n    question: IQuestionProps,\n}\n\ninterface RemoveQuestionPayload {\n    questionId: string\n}\n\ninterface StepperState{\n    questions: Array<IQuestionProps>,\n    total: number,\n    currentStep: number,\n    isLast: boolean,\n    isFirst: boolean\n}\n  \nconst initialState: StepperState = {\n    questions: questions,\n    total: questions.length,\n    currentStep: 1,\n    isFirst: true,\n    isLast: false,\n}\n\nconst stepperSlice = createSlice({\n    name: 'Stepper',\n    initialState,\n    reducers: {\n        AddQuestion(state: StepperState, action: PayloadAction<AddQuestionPayload>) {\n            const { question, index } = action.payload;\n            const questions = [...state.questions];\n            questions.splice(index, 0, question);\n            return {\n                ...state,\n                total: questions.length,\n                questions, \n            }\n        },\n        RemoveQuestion(state: StepperState, action: PayloadAction<RemoveQuestionPayload>) {\n            return {\n                ...state,\n                total: questions.length,\n                questions: state.questions.filter(question => question.id !== action.payload.questionId)\n            }\n        },\n        SetCurrentStep(state: StepperState, action: PayloadAction<SetCurrentStepPayload>) {\n            return {\n                ...state,\n                isFirst: action.payload.currentStep === 1,\n                isLast: action.payload.currentStep === state.questions.length,\n                currentStep: action.payload.currentStep\n            }\n        },\n    }\n});\n\nexport const stepperReducer = stepperSlice.reducer;\nexport const { AddQuestion, RemoveQuestion, SetCurrentStep } = stepperSlice.actions;\n\nexport default stepperSlice;\n","import { FunctionComponent, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport LoadingSkeleton from \"../LoadingSkeleton/LoadingSkeleton\";\nimport { useAppSelector } from \"../../hooks/useAppSelector\";\nimport { useAppDispatch } from \"../../hooks/useAppDispatch\";\nimport { SetRecommendations, ResetRecommendations } from \"../../slices/RecommendationsSlice\";\nimport { SetErrors } from \"../../slices/ErrorsSlice\";\nimport { ResetUser } from \"../../slices/UserSlice\";\nimport { IRecommendation } from \"../../interfaces/Recommendation\";\nimport { API_GET_RECOMMENDATION } from \"../../constants/ApiConstants\";\nimport { InsuranceTypes, Periodicity } from \"../../constants/RecommendationConstants\";\nimport { saveRecommendations, removeRecommendations, removeUser } from \"../../utils/localStorage\";\nimport { SetCurrentStep } from \"../../slices/StepperSlice\";\nimport \"./Recommendations.scss\";\n\nconst Recommendations: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState<boolean>(true);\n  const recommendations = useAppSelector((state) => state.recommendations);\n  const userJwt = useAppSelector((state) => state.user.jwt);\n\n  useEffect(() => {\n    if (recommendations.length) {\n      setLoading(false);\n    } else {\n      const requestHeaders = {\n        Authorization: `Bearer ${userJwt}`,\n      };\n      axios\n        .get(API_GET_RECOMMENDATION, { headers: requestHeaders })\n        .then((response) => {\n          setLoading(false);\n          dispatch(SetRecommendations(response.data));\n          saveRecommendations(response.data);\n        })\n        .catch((error) => {\n          if (error.response) {\n            dispatch(SetErrors(error.response.data.errors));\n          } else {\n            const { name, message } = error.toJSON();\n            dispatch(SetErrors([{ [name]: [message] }]));\n          }\n          setLoading(false);\n        });\n    }\n  }, [recommendations, userJwt, dispatch]);\n\n  const recommendationsList = () => {\n    return (\n      <div className=\"recommendations__list\">\n        {recommendations.map((recommendation: IRecommendation) => {\n          const { type, price } = recommendation;\n          const { amount, periodicity } = price;\n          return (\n            <div className=\"recommendations__item\" key={`${type}-${price}`}>\n              <h4 className=\"title\">\n                {InsuranceTypes[type as keyof typeof InsuranceTypes]}\n              </h4>\n              <p className=\"price\">\n                €{amount} per {Periodicity[periodicity as keyof typeof Periodicity]}\n              </p>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n\n  const reset = () => {\n    removeUser();\n    removeRecommendations();\n    dispatch(ResetRecommendations());\n    dispatch(ResetUser());\n    dispatch(SetCurrentStep({currentStep: 1}));\n  }\n\n  const renderRecommendations = () => {\n    if(Boolean(recommendations.length) && !loading) {\n      return (\n        <>\n          <h2 className=\"recommendations__title\">We got your recommendations</h2>\n          <p className=\"recommendations__subtitle\">Based on your answers, this is what make snese for you and what you should pay</p>\n          {recommendationsList()}\n          <button className=\"recommendations__reset\" onClick={reset}>Reset</button>\n        </>\n      )\n    } else {\n      return (\n        <div className=\"loadingSkeletons\">\n          <LoadingSkeleton height=\"50px\" width=\"100%\" />\n          <LoadingSkeleton height=\"50px\" width=\"100%\" />\n          <LoadingSkeleton height=\"50px\" width=\"100%\" />\n        </div>\n      )\n    }\n\n  }\n\n  return (\n    <div className=\"recommendations\">\n        {renderRecommendations()}\n    </div>\n  );\n};\n\nexport default Recommendations;\n","\nimport { useAppDispatch } from '../../hooks/useAppDispatch';\nimport { useAppSelector } from '../../hooks/useAppSelector';\nimport { SetCurrentStep } from '../../slices/StepperSlice';\nimport './Stepper.scss';\n\ninterface StepperProps {\n    currentStep: number;\n    children: Array<JSX.Element>;\n}\n\nconst Stepper: React.FunctionComponent<StepperProps> = ({ currentStep, children }) => {\n    const dispatch = useAppDispatch();\n    const questions = useAppSelector((state) => state.stepper.questions);\n    const isFirst = useAppSelector((state) => state.stepper.isFirst);\n    const isLast = useAppSelector((state) => state.stepper.isLast);\n    const nextStep = currentStep + 1;\n    const prevStep = currentStep - 1;\n\n    return (\n        <div className=\"stepper\">\n            <div className=\"header\">\n                <p className=\"header__info\">Question <strong>{currentStep}</strong> of <strong>{questions.length}</strong></p>\n                <div className=\"header__navigation\">\n                    <button className=\"nav-button\" disabled={isFirst} onClick={() => dispatch(SetCurrentStep({currentStep: prevStep}))}>Previous</button>\n                    <button className=\"nav-button\" disabled={isLast} onClick={() => dispatch(SetCurrentStep({currentStep: nextStep}))}>Next</button>\n                </div>\n            </div>\n            <div className=\"stepper__content\">\n                {children[currentStep - 1  ]}\n            </div>\n        </div>\n    )\n}\n\nexport default Stepper;","import { FunctionComponent, memo } from \"react\";\nimport { AnswerMode, IQuestion, ISingleChoiceAnswer } from \"../../interfaces/Question\";\n\nconst FormQuestion: FunctionComponent<IQuestion> = ({ id, value, title, answer, onChange }) => {\n  const onQuestionChange = (event: React.ChangeEvent<HTMLInputElement>) => onChange(id, event);\n  const _renderAnswerInput = () => {\n    switch (answer.mode) {\n      case AnswerMode.SingleLineInput:\n        return (\n          <input\n            type={answer.type}\n            placeholder={answer.placeholder}\n            value={value}\n            onChange={onQuestionChange}\n            aria-label={title}\n            aria-required=\"true\"\n          />\n        );\n      case AnswerMode.SingleChoiceInput:\n        return (\n          <div className=\"formQuestion__radio-group\">\n            {answer.options.map((option: ISingleChoiceAnswer) => (\n              <div key={option.label} className=\"radio-group__option\">\n                <input\n                  type=\"radio\"\n                  id={option.label}\n                  value={option.value}\n                  name={option.group}\n                  onChange={onQuestionChange}\n                  checked={value === option.value}\n                />\n                <label htmlFor={option.label}>{option.label}</label>\n              </div>\n            ))}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"formQuestion\">\n      <h1>{title}</h1>\n      {_renderAnswerInput()}\n    </div>\n  );\n};\n\nexport default memo(FormQuestion);\n","import { FunctionComponent } from \"react\";\nimport \"./LoadingSpinner.scss\";\n\ninterface LoadingSpinnerProps {\n    size?: number;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({size = 25}) => {\n    const dimensions = {width: `${size}px`, height: `${size}px`};\n    return (\n        <span className=\"loadingSpinner\" style={{...dimensions}}></span>\n    )\n}\n\nexport default LoadingSpinner\n","import { useState, useEffect } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport Stepper from '../Stepper/Stepper';\nimport FormQuestion from '../FormQuestion/FormQuestion';\nimport { useAppDispatch } from '../../hooks/useAppDispatch';\nimport { useAppSelector } from '../../hooks/useAppSelector';\nimport { AddQuestion, RemoveQuestion } from '../../slices/StepperSlice';\nimport { SetUser } from '../../slices/UserSlice';\nimport { SetErrors } from '../../slices/ErrorsSlice';\nimport { childrenOptionalQuestion } from '../../constants/QuestionsData';\nimport { API_POST_USER } from '../../constants/ApiConstants';\nimport { IForm } from '../../interfaces/Form';\nimport { IUser } from '../../interfaces/User';\nimport { stringToBoolean } from '../../utils/common';\nimport { loadForm, saveForm, saveUser } from '../../utils/localStorage';\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner';\nimport \"./Form.scss\";\n\n\nconst initialFormState = {\n  firstName: \"\",\n  address: \"\",\n  childrenExist: \"\",\n  occupation: \"\",\n  email: \"\",\n};\n\nconst Form: React.FunctionComponent = () => {\n    const dispatch = useAppDispatch();\n    const questions = useAppSelector((state) => state.stepper.questions);\n    const currentStep = useAppSelector((state) => state.stepper.currentStep);\n    const previouslySavedForm = loadForm();\n    const formValues = previouslySavedForm ? previouslySavedForm : initialFormState;\n    const [formState, setFormState] = useState<IForm>(formValues);\n    const [addUserRequestLoading, setAddUserRequestLoading] = useState<boolean>(false);\n\n  \n    const onQuestionChange = ( questionId: string, event: React.ChangeEvent<HTMLInputElement> ) => {\n      const { value } = event.target;\n      setFormState({ ...formState, [questionId]: value });\n    };\n  \n    useEffect(() => {\n      if (formState.childrenExist !== \"\") {\n        const isChildrenExist = stringToBoolean(formState.childrenExist);\n        const isChildrenCountExist = Boolean(questions.find((question) => question.id === \"numberOfChildren\"));\n        if (isChildrenExist && !isChildrenCountExist) {\n          dispatch(AddQuestion({ question: childrenOptionalQuestion, index: 3 }));\n          setFormState({\n            ...formState,\n            numberOfChildren: formState.numberOfChildren ?? \"\",\n          });\n        }\n        if (!isChildrenExist && isChildrenCountExist) {\n          dispatch(RemoveQuestion({ questionId: \"numberOfChildren\" }));\n          const newFormState = { ...formState };\n          delete newFormState.numberOfChildren;\n          setFormState(newFormState);\n        }\n      }\n      saveForm(formState);\n    }, [formState, questions, dispatch]);\n\n    const isFormValid = () => {\n      const { childrenExist, numberOfChildren, firstName, address, occupation, email } = formState;\n      const inputFieldsValues = [firstName, address, occupation, email];\n      const canSubmit = !inputFieldsValues.includes(\"\");\n      if(!canSubmit) {\n        return false;\n      }\n      switch(childrenExist) {\n        case \"true\": \n          return numberOfChildren !== \"\";\n        case \"false\":\n          return numberOfChildren === undefined;\n        case \"\":\n            return false;\n        default:\n          return false;\n      }\n    }\n\n    const formSubmit = () => {\n      dispatch(SetErrors([]));\n      const { numberOfChildren, firstName, address, occupation, email } = formState;\n      const data = {\n        firstName,\n        address,\n        numberOfChildren: Number(numberOfChildren ?? 0),\n        occupation,\n        email\n      }\n      setAddUserRequestLoading(true);\n      axios.post(API_POST_USER, data).then((response: AxiosResponse<IUser>) => {\n        saveUser(response.data);\n        dispatch(SetUser(response.data));\n        setAddUserRequestLoading(false);\n      }).catch(error => {\n        if (error.response) {\n          dispatch(SetErrors(error.response.data.errors));\n        } else {\n          const { name, message } = error.toJSON();\n          dispatch(SetErrors([{[name]: [message]}]));\n        }\n        setAddUserRequestLoading(false);\n      })\n    };\n\n    const formSteps = questions.map(({ id, title, answer }) => (\n      <FormQuestion\n        key={id}\n        id={id}\n        title={title}\n        answer={answer}\n        onChange={onQuestionChange}\n        value={formState[id as keyof IForm]}\n      />\n    ));\n    \n    return (\n        <div className=\"form\">\n            <Stepper currentStep={currentStep}>\n              {formSteps}\n            </Stepper>\n            <button className=\"form__submit\" disabled={!isFormValid() || addUserRequestLoading} onClick={formSubmit}>\n              Submit\n              {addUserRequestLoading && <LoadingSpinner size={20}/>}\n            </button>\n        </div>\n    )\n}\n\nexport default Form;","export const stringToBoolean = (string: string) => string === \"false\" ? false : !!string;","import { useAppSelector } from \"../../hooks/useAppSelector\";\nimport \"./ErrorsAlert.scss\";\n\nconst ErrorsAlert: React.FunctionComponent = () => {\n  const errors = useAppSelector((state) => state.errors);\n  const errorsList = Object.entries(errors);\n    if(!errorsList.length) {\n        return null\n    }\n \n    const errorListElements = errorsList.map(error => {\n        const scope = error[0];\n        const message = error[1].toString();\n        return (\n        <p role=\"alert\" className=\"message\" key={scope}>\n            {scope}: {message}\n          </p>\n        )\n    })\n    return <div className=\"errors\">{errorListElements}</div>\n};\n\nexport default ErrorsAlert;\n","import { useEffect } from 'react';\nimport Recommendations from './components/Recommendations/Recommendations';\nimport Form from './components/Form/Form';\nimport ErrorsAlert from './components/ErrorsAlert/ErrorsAlert';\nimport { useAppDispatch } from './hooks/useAppDispatch';\nimport { useAppSelector } from './hooks/useAppSelector';\nimport { loadRecommendations, loadUser } from './utils/localStorage';\nimport './App.scss';\nimport { SetRecommendations } from './slices/RecommendationsSlice';\nimport { SetUser } from './slices/UserSlice';\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const savedRecommendations = loadRecommendations();\n  const savedUser = loadUser();\n  const userJwt = useAppSelector((state) => state.user.jwt);\n  useEffect(() => {\n    if(savedRecommendations) {\n      dispatch(SetRecommendations(savedRecommendations))\n    }\n\n    if(savedUser) {\n      dispatch(SetUser(savedUser))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <main>\n      {userJwt ? <Recommendations /> : <Form />}\n      <ErrorsAlert/>\n    </main>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { stepperReducer as stepper } from './slices/StepperSlice';\nimport { userReducer as user } from './slices/UserSlice';\nimport { recommendationsReducer as recommendations } from './slices/RecommendationsSlice';\nimport { errorReducer as errors } from './slices/ErrorsSlice';\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n\nconst store = configureStore({\n  devTools: true,\n  reducer: {\n    stepper,\n    user,\n    recommendations,\n    errors\n  }\n});\n\nexport default store;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}